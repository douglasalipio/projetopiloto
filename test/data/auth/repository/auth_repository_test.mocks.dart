// Mocks generated by Mockito 5.0.16 from annotations
// in projeto_piloto/test/data/auth/repository/auth_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:projeto_piloto/data/auth/models/auth_model.dart' as _i2;
import 'package:projeto_piloto/data/auth/services/authentication_service.dart'
    as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeAuthModel_0 extends _i1.Fake implements _i2.AuthModel {}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i3.AuthService {
  MockAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.AuthModel> signUp(String? email, String? password) =>
      (super.noSuchMethod(Invocation.method(#signUp, [email, password]),
              returnValue: Future<_i2.AuthModel>.value(_FakeAuthModel_0()))
          as _i4.Future<_i2.AuthModel>);
  @override
  _i4.Future<void> signInWithGoogle() =>
      (super.noSuchMethod(Invocation.method(#signInWithGoogle, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> signInWithCredentials(String? email, String? password) =>
      (super.noSuchMethod(
          Invocation.method(#signInWithCredentials, [email, password]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> signOut() =>
      (super.noSuchMethod(Invocation.method(#signOut, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<_i2.AuthModel?> getAuthenticatedUser() =>
      (super.noSuchMethod(Invocation.method(#getAuthenticatedUser, []),
              returnValue: Future<_i2.AuthModel?>.value())
          as _i4.Future<_i2.AuthModel?>);
  @override
  String toString() => super.toString();
}
